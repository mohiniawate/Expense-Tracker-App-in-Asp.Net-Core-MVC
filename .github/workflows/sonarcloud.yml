name: SonarCloud Analysis

on:
  push:
    branches:
      - main  # This can be your default branch or any other branch
  pull_request:
    branches:
      - main  # Adjust as per your needs
  workflow_dispatch:  # Allows manual triggering

permissions:
  pull-requests: read  # Allows SonarCloud to decorate PRs with analysis results

jobs:
  build:
    name: Build and Analyze with SonarCloud
    runs-on: ubuntu-latest  # Use 'windows-latest' if you need a Windows runner

    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up .NET
      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.x'  # Adjust to the .NET version you're using (e.g., '6.x', '7.x')

      # Restore dependencies
      - name: Restore dependencies
        run: dotnet restore

      # Build the project
      - name: Build the project
        run: dotnet build --configuration Release

      # Run SonarCloud analysis
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v1
        with:
          args: |
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}  # Replace with your SonarCloud project key
            -Dsonar.organization=${{ secrets.SONAR_ORG }}  # Replace with your SonarCloud organization name
            -Dsonar.sources=.  # Path to your source files (default is the root directory)
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          
      # Run unit tests (optional, but recommended)
      - name: Run unit tests
        run: dotnet test --configuration Release --no-build

      # Publish SonarCloud results
      - name: Publish SonarCloud results
        uses: SonarSource/sonarcloud-github-action@v1
        with:
          args: |
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}  # Replace with your SonarCloud project key
            -Dsonar.organization=${{ secrets.SONAR_ORG }}  # Replace with your SonarCloud organization name
            -Dsonar.sources=.  # Path to your source files (default is the root directory)
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}    
  sonarcloud-initial-setup:
    runs-on: ubuntu-latest

    steps:
      - name: Install SonarCloud Scanner
        run: |
          wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-6.2.1.4610-linux-x64.zip 
          sudo apt-get install unzip
          sudo unzip sonar-scanner-cli-6.2.1.4610-linux-x64.zip
          sudo mv sonar-scanner-cli-6.2.1.4610-linux-x64 /opt/sonar-scanner
          echo 'export PATH=$PATH:/opt/sonar-scanner/bin' >> ~/.bashrc
          source ~/.bashrc
          sonar-scanner -v
          #sudo ln -s /opt/sonar-scanner-cli-7.0.1.4817-linux/bin/sonar-scanner /usr/local/bin/sonar-scanner

      - name: SonarCloud authentication
        run: |
          echo ${{ secrets.SONAR_TOKEN }} > sonar_token.txt
          sonar-scanner -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }} -Dsonar.organization=${{ secrets.SONAR_ORG }} -Dsonar.login=$(cat sonar_token.txt)
          
      - name: Clean up
        run: rm sonar_token.txt
