name: SonarCloud Analysis

on:
  push:
    branches:
      - main  # This can be your default branch or any other branch
  pull_request:
    branches:
      - main  # Adjust as per your needs
  workflow_dispatch:  # Allows manual triggering

permissions:
  pull-requests: read  # Allows SonarCloud to decorate PRs with analysis results

jobs:
  build:
    name: Build and Analyze with SonarCloud
    runs-on: ubuntu-latest  # Use 'windows-latest' if you need a Windows runner

    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up .NET (if using .NET)
      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.x'  # Adjust to the .NET version you're using (e.g., '6.x', '7.x')

      # Restore dependencies
      - name: Restore dependencies
        run: dotnet restore

      # Build the project
      - name: Build the project
        run: dotnet build --configuration Release

      - name: Run SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v1
        with:
          organization: ${{ secrets.SONAR_ORG }}  # Your SonarCloud organization
          projectKey: ${{ secrets.SONAR_PROJECT_KEY }}  # Your SonarCloud project key
          projectName: 'Expense-Tracker-App-in-Asp.Net-Core-MVC'  # Project name in SonarCloud
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}  # Your SonarCloud token (stored as a secret)
          
      - name: Publish code coverage results
        if: success() && github.event_name == 'push'
        run: |
          #This is optional and should only be included if you're generating code coverage reports.
          dotnet test --configuration Release --no-build --collect:"XPlat Code Coverage"
          bash <(curl -s https://codecov.io/bash)
